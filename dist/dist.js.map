{"version":3,"sources":["webpack://ComponentRelay/webpack/universalModuleDefinition","webpack://ComponentRelay/webpack/bootstrap","webpack://ComponentRelay/webpack/runtime/define property getters","webpack://ComponentRelay/webpack/runtime/hasOwnProperty shorthand","webpack://ComponentRelay/./lib/snjsTypes.ts","webpack://ComponentRelay/./node_modules/uuid/dist/esm-browser/rng.js","webpack://ComponentRelay/./node_modules/uuid/dist/esm-browser/regex.js","webpack://ComponentRelay/./node_modules/uuid/dist/esm-browser/validate.js","webpack://ComponentRelay/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://ComponentRelay/./node_modules/uuid/dist/esm-browser/v4.js","webpack://ComponentRelay/./lib/utils.ts","webpack://ComponentRelay/./lib/logger.ts","webpack://ComponentRelay/./lib/componentRelay.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","ComponentAction","Environment","ContentType","AppDataField","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","options","buf","offset","rnds","random","arr","arguments","length","undefined","toLowerCase","TypeError","environmentToString","environment","map","Web","Desktop","Mobile","noop","Logger","window","console","isSupported","this","enabled","log","error","MessagePayloadApi","ComponentRelay","constructor","params","activeThemes","acceptsThemes","targetWindow","contentWindow","processParameters","registerMessageHandler","initialPermissions","onReady","coallesedSaving","coallesedSavingDelay","component","onReadyCallback","debug","deinit","messageQueue","sentMessages","lastStreamedItem","pendingSaveItems","pendingSaveTimeout","pendingSaveParams","messageHandler","document","removeEventListener","event","data","referrer","URL","origin","parsedData","str","result","JSON","parse","type","e","isValidJsonString","handleMessage","addEventListener","payload","action","ComponentRegistered","sessionKey","componentData","ActivateThemes","activateThemes","themes","original","originalMessage","filter","message","messageId","extensionName","title","alertMessage","replace","callback","platform","requestPermissions","postMessage","activeThemeUrls","ThemesActivated","getSelfComponentUUID","isRunningInDesktopApplication","isRunningInMobileApplication","getComponentDataValueForKey","setComponentDataValueForKey","value","SetComponentData","clearComponentData","api","Component","generateUUID","sentMessage","stringify","postMessagePayload","parent","permissions","RequestPermissions","incomingUrls","sort","themesToActivate","themesToDeactivate","activeUrl","includes","candidate","themeUrl","deactivateTheme","link","createElement","id","btoa","href","rel","media","className","getElementsByTagName","appendChild","themeElementForUrl","Array","from","getElementsByClassName","slice","find","element","parentNode","setAttribute","removeChild","uuidv4","streamItems","contentTypes","StreamItems","content_types","items","streamContextItem","StreamContextItem","item","clearTimeout","_performSavingOfItems","selectItem","SelectItem","jsonObjectForItem","clearSelection","ClearSelection","content_type","Tag","createItem","CreateItem","associateItem","createItems","mapped","CreateItems","AssociateItem","deassociateItem","DeassociateItem","deleteItem","deleteItems","DeleteItems","sendCustomEvent","saveItem","skipDebouncer","saveItems","saveItemWithPresave","presave","saveItemsWithPresave","mappedItems","SaveItems","incomingIds","preexistingItems","concat","setTimeout","setSize","width","height","SetSize","copy","assign","children","getItemAppDataValue","content","appData"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,iBAAkB,GAAIH,GACH,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,IAR3B,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1B,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCQ3E,IAAKI,EA0BAC,EAMAC,EAwBAC,EC7DZ,IAAIC,E,gCDKQJ,K,mBAAAA,E,2BAAAA,E,wCAAAA,E,uBAAAA,E,yBAAAA,E,+BAAAA,E,mCAAAA,E,iCAAAA,E,yBAAAA,E,2BAAAA,E,2BAAAA,E,sCAAAA,E,gDAAAA,E,oDAAAA,E,yCAAAA,E,wDAAAA,E,+BAAAA,E,2CAAAA,E,wBAAAA,E,cAAAA,E,2BAAAA,E,uBAAAA,E,oCAAAA,M,cA0BAC,O,aAAAA,I,qBAAAA,I,oBAAAA,M,cAMAC,K,QAAAA,E,eAAAA,E,4BAAAA,E,uBAAAA,E,uCAAAA,E,YAAAA,E,UAAAA,E,uBAAAA,E,yBAAAA,E,mBAAAA,E,6BAAAA,E,+BAAAA,E,2BAAAA,E,mCAAAA,E,iBAAAA,E,aAAAA,E,+BAAAA,E,8CAAAA,E,gDAAAA,E,8CAAAA,E,kCAAAA,M,cAwBAC,K,gBAAAA,E,oBAAAA,E,gBAAAA,E,qCAAAA,E,8BAAAA,E,0BAAAA,E,4CAAAA,E,4BAAAA,E,oBAAAA,E,wCAAAA,E,sCAAAA,M,KC5DZ,IAAIE,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,oBAAbE,UAAgE,mBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBzB,8HCMA,EAJA,SAAkBO,GAChB,MAAuB,iBAATA,GAAqB,OAAWA,ICKhD,IAFA,IAAIC,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBjD,MCNA,EApBA,SAAYC,EAASC,EAAKC,GAExB,IAAIC,GADJH,EAAUA,GAAW,IACFI,SAAWJ,EAAQX,KAAOA,KAK7C,GAHAc,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPC,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBK,EAAIC,EAASN,GAAKO,EAAKP,GAGzB,OAAOK,EAGT,ODRF,SAAmBI,GACjB,IAAIH,EAASI,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7EZ,GAAQC,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAM,IAAMP,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAM,IAAMP,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAM,IAAMP,EAAUU,EAAIH,EAAS,IAAMP,EAAUU,EAAIH,EAAS,IAAM,IAAMP,EAAUU,EAAIH,EAAS,KAAOP,EAAUU,EAAIH,EAAS,KAAOP,EAAUU,EAAIH,EAAS,KAAOP,EAAUU,EAAIH,EAAS,KAAOP,EAAUU,EAAIH,EAAS,KAAOP,EAAUU,EAAIH,EAAS,MAAMO,cAMzf,IAAK,EAASf,GACZ,MAAMgB,UAAU,+BAGlB,OAAOhB,ECNA,CAAUS,ICINQ,EAAuBC,IAAsC,MACxE,MAAMC,EAAM,CACV,CAAC9B,EAAY+B,KAAM,MACnB,CAAC/B,EAAYgC,SAAU,UACvB,CAAChC,EAAYiC,QAAS,UAExB,iBAAOH,EAAID,UAAX,QAA2BC,EAAI9B,EAAY+B,MC9BvCG,EAAO,OAEE,MAAMC,EAGW,yBAC5B,SAAQC,OAAOC,UAAWA,SAGb,kBACb,OAAKF,EAAOG,aAAgBC,KAAKC,QAG1BH,QAAQI,IAAIjC,KAAK6B,SAFfH,EAKK,mBACd,OAAKC,EAAOG,YAGLD,QAAQK,MAAMlC,KAAK6B,SAFjBH,G,QCGRS,E,ysBDnBgBR,G,iCACF,M,iDAAA,M,SCkBdQ,K,uBAAAA,M,KA8FU,MAAMC,EAenBC,YAAYC,GACV,GADwC,uHAXX,CAAEC,aAAc,GAAIC,eAAe,IAWxB,sBAVD,IAUC,sBATD,IASC,qKAJhB,GAIgB,8BA/GL,KA+GK,iCACnCF,IAAWA,EAAOG,aACrB,MAAM,IAAIvC,MAAM,gDAElB6B,KAAKW,cAAgBJ,EAAOG,aAC5BV,KAAKY,kBAAkBL,GACvBP,KAAKa,yBAGCD,kBAAkBL,GAA8B,MACtD,MAAM,mBAAEO,EAAF,QAAsBpC,EAAtB,QAA+BqC,GAAYR,EAWrB,MATxBO,GAAsBA,EAAmB7B,OAAS,IACpDe,KAAKc,mBAAqBA,GAExBpC,WAASsC,kBACXhB,KAAKgB,gBAAkBtC,EAAQsC,iBAE7BtC,WAASuC,uBACXjB,KAAKiB,qBAAuBvC,EAAQuC,sBAElCvC,WAAS+B,gBACXT,KAAKkB,UAAUT,cAAf,UAA+B/B,aAA/B,EAA+BA,EAAS+B,qBAAxC,UAEEM,IACFf,KAAKmB,gBAAkBJ,GAEzBnB,UAAA,UAAiBlB,aAAjB,EAAiBA,EAAS0C,aAA1B,SAGKC,SACLrB,KAAKmB,qBAAkBjC,EACvBc,KAAKkB,UAAY,CACfT,eAAe,EACfD,aAAc,IAEhBR,KAAKsB,aAAe,GACpBtB,KAAKuB,aAAe,GACpBvB,KAAKwB,sBAAmBtC,EACxBc,KAAKyB,sBAAmBvC,EACxBc,KAAK0B,wBAAqBxC,EAC1Bc,KAAK2B,uBAAoBzC,EAErBc,KAAK4B,iBACP5B,KAAKW,cAAckB,SAASC,oBAAoB,UAAW9B,KAAK4B,gBAChE5B,KAAKW,cAAcmB,oBAAoB,UAAW9B,KAAK4B,iBAInDf,yBACNb,KAAK4B,eAAkBG,IAQrB,GAPAnC,OAAY,mCAAoCmC,EAAMC,MAOlDH,SAASI,UACM,IAAIC,IAAIL,SAASI,UAAUE,SACxB,IAAID,IAAIH,EAAMI,QAAQA,OAGxC,OAQJ,GAAKnC,KAAKkB,UAAUiB,QAEb,GAAIJ,EAAMI,SAAWnC,KAAKkB,UAAUiB,OAEzC,YAHAnC,KAAKkB,UAAUiB,OAASJ,EAAMI,OAOhC,MAAM,KAAEH,GAASD,EACXK,EFvMsBC,KAChC,GAAmB,iBAARA,EACT,OAAO,EAET,IACE,MAAMC,EAASC,KAAKC,MAAMH,GACpBI,EAAO1F,OAAOM,UAAUmB,SAASjB,KAAK+E,GAC5C,MAAgB,oBAATG,GAAuC,mBAATA,EACrC,MAAOC,GACP,OAAO,IE8LcC,CAAkBX,GAAQO,KAAKC,MAAMR,GAAQA,EAE3DI,EAKLpC,KAAK4C,cAAcR,GAJjBxC,QAAa,uCAiBjBI,KAAKW,cAAckB,SAASgB,iBAAiB,UAAW7C,KAAK4B,gBAAgB,GAC7E5B,KAAKW,cAAckC,iBAAiB,UAAW7C,KAAK4B,gBAAgB,GAEpEhC,OAAY,2BAGNgD,cAAcE,GACpB,OAAQA,EAAQC,QACd,KAAKvF,EAAgBwF,oBACnBhD,KAAKkB,UAAU+B,WAAaH,EAAQG,WAChCH,EAAQI,gBACVlD,KAAKkB,UAAUc,KAAOc,EAAQI,eAEhClD,KAAKe,QAAQ+B,EAAQd,MACrBpC,OAAY,kDAAmDkD,GAC/D,MAEF,KAAKtF,EAAgB2F,eACnBnD,KAAKoD,eAAeN,EAAQd,KAAKqB,QACjC,MAEF,QAAS,SACP,IAAKP,EAAQQ,SACX,OAIF,MAAMC,EAAe,UAAGvD,KAAKuB,oBAAR,aAAG,EAAmBiC,QAAQC,IAA4B,MAC7E,OAAOA,EAAQC,aAAR,UAAsBZ,EAAQQ,gBAA9B,aAAsB,EAAkBI,cAC9C,GAEH,IAAKH,EAAiB,CAIpB,MAAMI,EAAgB3D,KAAKW,cAAckB,SAAS+B,MAC5CC,GAAgB,yBAAkBF,EAAlB,wDACpB,6FAA6FG,QAAQ,KAAM,KAG7G,YADAlE,OAAYiE,GAIdN,SAAA,UAAAA,EAAiBQ,gBAAjB,cAAAR,EAA4BT,EAAQd,MACpC,QAKEjB,QAAQiB,GACdhC,KAAKkB,UAAU5B,YAAc0C,EAAK1C,YAClCU,KAAKkB,UAAU8C,SAAWhC,EAAKgC,SAC/BhE,KAAKkB,UAAU9C,KAAO4D,EAAK5D,KAEvB4B,KAAKc,oBAAsBd,KAAKc,mBAAmB7B,OAAS,GAC9De,KAAKiE,mBAAmBjE,KAAKc,oBAG/B,IAAK,MAAM2C,KAAWzD,KAAKsB,aACzBtB,KAAKkE,YAAYT,EAAQV,OAAQU,EAAQzB,KAAMyB,EAAQM,UAGzD/D,KAAKsB,aAAe,GAEpB1B,OAAY,0BAA2BoC,GAEvChC,KAAKoD,eAAepB,EAAKmC,iBAAmB,IAG5CnE,KAAKkE,YAAY1G,EAAgB4G,gBAAiB,IAE9CpE,KAAKmB,iBACPnB,KAAKmB,kBAOFkD,uBACL,OAAOrE,KAAKkB,UAAU9C,KAMjBkG,gCACL,OAAOtE,KAAKkB,UAAU5B,cAAgBD,EAAoB5B,EAAYgC,SAMjE8E,+BACL,OAAOvE,KAAKkB,UAAU5B,cAAgBD,EAAoB5B,EAAYiC,QAQjE8E,4BAA4B3H,GACjC,GAAKmD,KAAKkB,UAAUc,KAGpB,OAAOhC,KAAKkB,UAAUc,KAAKnF,GAQtB4H,4BAA4B5H,EAAa6H,GAC9C,IAAK1E,KAAKkB,UAAUc,KAClB,MAAM,IAAI7D,MAAM,2CAElB,IAAKtB,GAAQA,GAAsB,IAAfA,EAAIoC,OACtB,MAAM,IAAId,MAAM,wDAElB6B,KAAKkB,UAAUc,KAAf,OACKhC,KAAKkB,UAAUc,MADpB,IAEE,CAACnF,GAAM6H,IAET1E,KAAKkE,YAAY1G,EAAgBmH,iBAAkB,CAAEzB,cAAelD,KAAKkB,UAAUc,OAM9E4C,qBACL5E,KAAKkB,UAAUc,KAAO,GACtBhC,KAAKkE,YAAY1G,EAAgBmH,iBAAkB,CAAEzB,cAAelD,KAAKkB,UAAUc,OAG7EkC,YAAYnB,EAAyBf,EAAmB+B,GAK9D,IAAK/D,KAAKkB,UAAU+B,WAOlB,YANAjD,KAAKsB,aAAa/C,KAAK,CACrBwE,SACAf,OACA6C,IAAKzE,EAAkB0E,UACvBf,SAAUA,IAKd,MAAMN,EAAU,CACdV,SACAf,OACA0B,UAAW1D,KAAK+E,eAChB9B,WAAYjD,KAAKkB,UAAU+B,WAC3B4B,IAAKzE,EAAkB0E,WAGnBE,EAAczC,KAAKC,MAAMD,KAAK0C,UAAUxB,IAI9C,IAAIyB,EAHJF,EAAYjB,SAAWA,EACvB/D,KAAKuB,aAAahD,KAAKyG,GAMrBE,EADElF,KAAKuE,+BACchC,KAAK0C,UAAUxB,GAEfA,EAGvB7D,OAAY,mBAAoBsF,GAChClF,KAAKW,cAAcwE,OAAOjB,YAAYgB,EAAoBlF,KAAKkB,UAAUiB,QAGnE8B,mBAAmBmB,EAAoCrB,GAC7D/D,KAAKkE,YAAY1G,EAAgB6H,mBAAoB,CAAED,gBAAe,KACpErB,GAAYA,OAIRX,iBAA4C,IAA7BkC,EAA6B,uDAAJ,GAC9C,IAAKtF,KAAKkB,UAAUT,cAClB,OAGFb,OAAY,mBAAoB0F,GAEhC,MAAM,aAAE9E,GAAiBR,KAAKkB,UAE9B,GAAIV,GAAgBA,EAAa+E,OAAO/G,YAAc8G,EAAaC,OAAO/G,WAExE,OAGF,IAAIgH,EAAmBF,EACvB,MAAMG,EAAqB,GAE3B,IAAK,MAAMC,KAAalF,EACjB8E,EAAaK,SAASD,GAKzBF,EAAmBA,EAAiBhC,QAAQoC,GACnCA,IAAcF,IAJvBD,EAAmBlH,KAAKmH,GAS5B9F,OAAY,uBAAwB6F,GACpC7F,OAAY,qBAAsB4F,GAElC,IAAK,MAAMK,KAAYJ,EACrBzF,KAAK8F,gBAAgBD,GAGvB7F,KAAKkB,UAAUV,aAAe8E,EAE9B,IAAK,MAAMO,KAAYL,EAAkB,CACvC,IAAKK,EACH,SAGF,MAAME,EAAO/F,KAAKW,cAAckB,SAASmE,cAAc,QACvDD,EAAKE,GAAKC,KAAKL,GACfE,EAAKI,KAAON,EACZE,EAAKtD,KAAO,WACZsD,EAAKK,IAAM,aACXL,EAAKM,MAAQ,eACbN,EAAKO,UAAY,eACjBtG,KAAKW,cAAckB,SAAS0E,qBAAqB,QAAQ,GAAGC,YAAYT,IAIpEU,mBAAmBZ,GAEzB,OADiBa,MAAMC,KAAK3G,KAAKW,cAAckB,SAAS+E,uBAAuB,iBAAiBC,QAChFC,MAAMC,GAEbA,EAAQd,IAAMC,KAAKL,KAItBC,gBAAgBD,GACtB,MAAMkB,EAAU/G,KAAKyG,mBAAmBZ,GACpCkB,GAAWA,EAAQC,aACrBD,EAAQE,aAAa,WAAY,QACjCF,EAAQC,WAAWE,YAAYH,IAI3BhC,eACN,OF3dKoC,IEieY,eACjB,OAAOnH,KAAKkB,UAAU8C,SAMF,kBACpB,OAAOhE,KAAKkB,UAAU5B,YASjB8H,YAAYC,EAA6BtD,GAC9C/D,KAAKkE,YAAY1G,EAAgB8J,YAAa,CAAEC,cAAeF,IAAiBrF,IAC9E+B,EAAS/B,EAAKwF,UAQXC,kBAAkB1D,GACvB/D,KAAKkE,YAAY1G,EAAgBkK,kBAAmB,IAAK1F,IACvD,MAAM,KAAE2F,GAAS3F,IAOEhC,KAAKwB,kBAAoBxB,KAAKwB,iBAAiBpD,OAASuJ,EAAKvJ,OAE/D4B,KAAK0B,qBACpBkG,aAAa5H,KAAK0B,oBAClB1B,KAAK6H,sBAAsB7H,KAAK2B,mBAChC3B,KAAK0B,wBAAqBxC,EAC1Bc,KAAK2B,uBAAoBzC,GAG3Bc,KAAKwB,iBAAmBmG,EACxB5D,EAAS/D,KAAKwB,qBAQXsG,WAAWH,GAChB3H,KAAKkE,YAAY1G,EAAgBuK,WAAY,CAAEJ,KAAM3H,KAAKgI,kBAAkBL,KAMvEM,iBACLjI,KAAKkE,YAAY1G,EAAgB0K,eAAgB,CAAEC,aAAczK,EAAY0K,MAQxEC,WAAWV,EAAmB5D,GACnC/D,KAAKkE,YAAY1G,EAAgB8K,WAAY,CAAEX,KAAM3H,KAAKgI,kBAAkBL,KAAU3F,IACpF,IAAI,KAAE2F,GAAS3F,GAKV2F,GAAQ3F,EAAKwF,OAASxF,EAAKwF,MAAMvI,OAAS,IAC7C0I,EAAO3F,EAAKwF,MAAM,IAEpBxH,KAAKuI,cAAcZ,GACnB5D,GAAYA,EAAS4D,MASlBa,YAAYhB,EAAsBzD,GACvC,MAAM0E,EAASjB,EAAMjI,KAAKoI,GAAS3H,KAAKgI,kBAAkBL,KAC1D3H,KAAKkE,YAAY1G,EAAgBkL,YAAa,CAAElB,MAAOiB,IAAWzG,IAChE+B,GAAYA,EAAS/B,EAAKwF,UAQvBe,cAAcZ,GACnB3H,KAAKkE,YAAY1G,EAAgBmL,cAAe,CAAEhB,KAAM3H,KAAKgI,kBAAkBL,KAO1EiB,gBAAgBjB,GACrB3H,KAAKkE,YAAY1G,EAAgBqL,gBAAiB,CAAElB,KAAM3H,KAAKgI,kBAAkBL,KAQ5EmB,WAAWnB,EAAc5D,GAC9B/D,KAAK+I,YAAY,CAACpB,GAAO5D,GAQpBgF,YAAYvB,EAAiBzD,GAClC,MAAMxD,EAAS,CACbiH,MAAOA,EAAMjI,KAAKoI,GACT3H,KAAKgI,kBAAkBL,MAGlC3H,KAAKkE,YAAY1G,EAAgBwL,YAAazI,GAASyB,IACrD+B,GAAYA,EAAS/B,MAUlBiH,gBAAgBlG,EAAyBf,EAAW+B,GACzD/D,KAAKkE,YAAYnB,EAAQf,GAAOA,IAC9B+B,GAAYA,EAAS/B,MAUlBkH,SAASvB,EAAc5D,GAAqD,IAA9BoF,EAA8B,wDACjFnJ,KAAKoJ,UAAU,CAACzB,GAAO5D,EAAUoF,GAW5BE,oBAAoB1B,EAAc2B,EAAcvF,GACrD/D,KAAKuJ,qBAAqB,CAAC5B,GAAO2B,EAASvF,GAWtCwF,qBAAqB/B,EAAiB8B,EAAcvF,GACzD/D,KAAKoJ,UAAU5B,EAAOzD,GAAU,EAAOuF,GAGjCzB,sBAAsB,GAA+F,IAA/F,MAAEL,EAAF,QAAS8B,EAAT,SAAkBvF,GAA6E,EAI3HuF,GAAWA,IAEX,MAAME,EAAc,GACpB,IAAK,MAAM7B,KAAQH,EACjBgC,EAAYjL,KAAKyB,KAAKgI,kBAAkBL,IAG1C3H,KAAKkE,YAAY1G,EAAgBiM,UAAW,CAAEjC,MAAOgC,IAAe,KAClEzF,GAAYA,OAYTqF,UAAU5B,EAAiBzD,GAAoE,IAA7CoF,EAA6C,wDAAtBG,EAAsB,uCASpG,GAJKtJ,KAAKyB,mBACRzB,KAAKyB,iBAAmB,IAGtBzB,KAAKgB,kBAAoBmI,EAAe,CACtCnJ,KAAK0B,oBACPkG,aAAa5H,KAAK0B,oBAGpB,MAAMgI,EAAclC,EAAMjI,KAAKoI,GAAiBA,EAAKvJ,OAK/CuL,EAAmB3J,KAAKyB,iBAAiB+B,QAAQmE,IAC7C+B,EAAY/D,SAASgC,EAAKvJ,QAIpC4B,KAAKyB,iBAAmBkI,EAAiBC,OAAOpC,GAGhDxH,KAAK2B,kBAAoB,CACvB6F,MAAOxH,KAAKyB,iBACZ6H,UACAvF,YAGF/D,KAAK0B,mBAAqBmI,YAAW,KACnC7J,KAAK6H,sBAAsB7H,KAAK2B,mBAChC3B,KAAKyB,iBAAmB,GACxBzB,KAAK0B,wBAAqBxC,EAC1Bc,KAAK2B,kBAAoB,OACxB3B,KAAKiB,2BAERjB,KAAK6H,sBAAsB,CAAEL,QAAO8B,UAASvF,aAS1C+F,QAAQC,EAAwBC,GACrChK,KAAKkE,YAAY1G,EAAgByM,QAAS,CAAExH,KAAM,YAAasH,QAAOC,WAGhEhC,kBAAkBL,GACxB,MAAMuC,EAAOnN,OAAOoN,OAAO,GAAIxC,GAG/B,OAFAuC,EAAKE,SAAW,KAChBF,EAAK/E,OAAS,KACP+E,EAUFG,oBAAoB1C,EAA0B9K,GAEnD,OAAO8K,EAAK2C,QAAQC,QADE,wBACqB1N,I","file":"dist.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ComponentRelay\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ComponentRelay\"] = factory();\n\telse\n\t\troot[\"ComponentRelay\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Declaring types needed from snjs.\n * This file will be deleted after snjs becomes a monorepo and provides such types.\n */\n\n/**\n * The available actions that a component can perform.\n */\nexport enum ComponentAction {\n  SetSize = 'set-size',\n  StreamItems = 'stream-items',\n  StreamContextItem = 'stream-context-item',\n  SaveItems = 'save-items',\n  SelectItem = 'select-item',\n  AssociateItem = 'associate-item',\n  DeassociateItem = 'deassociate-item',\n  ClearSelection = 'clear-selection',\n  CreateItem = 'create-item',\n  CreateItems = 'create-items',\n  DeleteItems = 'delete-items',\n  SetComponentData = 'set-component-data',\n  InstallLocalComponent = 'install-local-component',\n  ToggleActivateComponent = 'toggle-activate-component',\n  RequestPermissions = 'request-permissions',\n  PresentConflictResolution = 'present-conflict-resolution',\n  DuplicateItem = 'duplicate-item',\n  ComponentRegistered = 'component-registered',\n  ActivateThemes = 'themes',\n  Reply = 'reply',\n  SaveSuccess = 'save-success',\n  SaveError = 'save-error',\n  ThemesActivated = 'themes-activated'\n}\n\nexport enum Environment {\n  Web = 1,\n  Desktop = 2,\n  Mobile = 3\n}\n\nexport enum ContentType {\n  Any = '*',\n  Item = 'SF|Item',\n  RootKey = 'SN|RootKey|NoSync',\n  ItemsKey = 'SN|ItemsKey',\n  EncryptedStorage = 'SN|EncryptedStorage',\n  Note = 'Note',\n  Tag = 'Tag',\n  SmartTag = 'SN|SmartTag',\n  Component = 'SN|Component',\n  Editor = 'SN|Editor',\n  ActionsExtension = 'Extension',\n  UserPrefs = 'SN|UserPreferences',\n  Privileges = 'SN|Privileges',\n  HistorySession = 'SN|HistorySession',\n  Theme = 'SN|Theme',\n  Mfa = 'SF|MFA',\n  ServerExtension = 'SF|Extension',\n  FilesafeCredentials = 'SN|FileSafe|Credentials',\n  FilesafeFileMetadata = 'SN|FileSafe|FileMetadata',\n  FilesafeIntegration = 'SN|FileSafe|Integration',\n  ExtensionRepo = 'SN|ExtensionRepo'\n}\n\nexport enum AppDataField {\n  Pinned = 'pinned',\n  Archived = 'archived',\n  Locked = 'locked',\n  UserModifiedDate = 'client_updated_at',\n  DefaultEditor = 'defaultEditor',\n  MobileRules = 'mobileRules',\n  NotAvailableOnMobile = 'notAvailableOnMobile',\n  MobileActive = 'mobileActive',\n  LastSize = 'lastSize',\n  PrefersPlainEditor = 'prefersPlainEditor',\n  ComponentInstallError = 'installError'\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Environment } from './snjsTypes'\nimport { v4 as uuidv4 } from 'uuid'\n\ndeclare global {\n  interface Window { msCrypto: unknown; }\n}\n\nexport const generateUuid = () : string => {\n  return uuidv4()\n}\n\nexport const isValidJsonString = (str: unknown) : boolean => {\n  if (typeof str !== 'string') {\n    return false\n  }\n  try {\n    const result = JSON.parse(str)\n    const type = Object.prototype.toString.call(result)\n    return type === '[object Object]' || type === '[object Array]'\n  } catch (e) {\n    return false\n  }\n}\n\nexport const environmentToString = (environment: Environment) : string => {\n  const map = {\n    [Environment.Web]: 'web',\n    [Environment.Desktop]: 'desktop',\n    [Environment.Mobile]: 'mobile',\n  }\n  return map[environment] ?? map[Environment.Web]\n}\n","const noop = () => undefined\n\nexport default class Logger {\n  static enabled = false;\n\n  private static get isSupported() {\n    return (window.console || console) ? true : false\n  }\n\n  static get info () : any {\n    if (!Logger.isSupported || !this.enabled) {\n      return noop\n    }\n    return console.log.bind(console)\n  }\n\n  static get error () : any {\n    if (!Logger.isSupported) {\n      return noop\n    }\n    return console.error.bind(console)\n  }\n}\n","import {\n  AppDataField,\n  ComponentAction,\n  ContentType,\n  Environment,\n} from './snjsTypes'\nimport type {\n  ComponentPermission,\n  ItemMessagePayload,\n  SNItem,\n  UuidString\n} from '@standardnotes/snjs'\nimport {\n  environmentToString,\n  generateUuid,\n  isValidJsonString\n} from './utils'\nimport Logger from './logger'\n\nconst DEFAULT_COALLESED_SAVING_DELAY = 250\n\nenum MessagePayloadApi {\n  Component = 'component',\n}\n\ntype Component = {\n  uuid?: string;\n  origin?: string;\n  data?: ComponentData;\n  sessionKey?: string;\n  environment?: string;\n  platform?: string;\n  isMobile?: boolean;\n  acceptsThemes: boolean;\n  activeThemes: string[];\n}\n\ntype ComponentData = {\n  [key: string]: any\n}\n\ntype MessageData = Partial<{\n  /** Related to the stream-item-context action */\n  item?: ItemMessagePayload\n  /** Related to the stream-items action */\n  content_types?: ContentType[]\n  items?: ItemMessagePayload[]\n  /** Related to the request-permission action */\n  permissions?: ComponentPermission[]\n  /** Related to the component-registered action */\n  componentData?: any\n  uuid?: UuidString\n  environment?: string\n  platform?: string\n  activeThemeUrls?: string[]\n  /** Related to set-size action */\n  width?: string | number\n  height?: string | number\n  type?: string\n  /** Related to themes action */\n  themes?: string[]\n  /** Related to clear-selection action */\n  content_type?: ContentType\n}>\n\ntype MessagePayload = {\n  action: ComponentAction;\n  data: MessageData;\n  componentData?: ComponentData;\n  messageId?: UuidString;\n  sessionKey?: UuidString;\n  api: MessagePayloadApi;\n  original?: MessagePayload;\n  callback?: (...params: any) => void;\n}\n\ntype ComponentRelayOptions = {\n  coallesedSaving?: boolean,\n  coallesedSavingDelay?: number,\n  /**\n   * Outputs debugging information to console.\n   */\n  debug?: boolean,\n  /**\n   * Indicates whether or not the component accepts themes.\n   */\n  acceptsThemes?: boolean\n}\n\ntype ComponentRelayParams = {\n  /**\n   * Represents the window object that the component is running in.\n   */\n  targetWindow: Window\n  /**\n   * A collection of permissions that the component can request\n   * access once it's ready.\n   */\n  initialPermissions?: ComponentPermission[]\n  /**\n   * The options to initialize\n   */\n  options?: ComponentRelayOptions,\n  /**\n   * A callback that is executed after the component has been registered.\n   */\n  onReady?: () => void\n}\n\ntype ItemPayload = {\n  content_type?: ContentType,\n  content?: any,\n  [key: string]: any\n}\n\nexport default class ComponentRelay {\n  private contentWindow: Window;\n  private initialPermissions?: ComponentPermission[];\n  private onReadyCallback?: () => void;\n  private component: Component = { activeThemes: [], acceptsThemes: true };\n  private sentMessages: MessagePayload[] = [];\n  private messageQueue: MessagePayload[] = [];\n  private lastStreamedItem?: SNItem;\n  private pendingSaveItems?: SNItem[];\n  private pendingSaveTimeout?: NodeJS.Timeout;\n  private pendingSaveParams?: any;\n  private coallesedSaving = false;\n  private coallesedSavingDelay = DEFAULT_COALLESED_SAVING_DELAY;\n  private messageHandler?: (event: any) => void;\n\n  constructor(params: ComponentRelayParams) {\n    if (!params || !params.targetWindow) {\n      throw new Error('contentWindow must be a valid Window object.')\n    }\n    this.contentWindow = params.targetWindow\n    this.processParameters(params)\n    this.registerMessageHandler()\n  }\n\n  private processParameters(params: ComponentRelayParams) {\n    const { initialPermissions, options, onReady } = params\n\n    if (initialPermissions && initialPermissions.length > 0) {\n      this.initialPermissions = initialPermissions\n    }\n    if (options?.coallesedSaving) {\n      this.coallesedSaving = options.coallesedSaving\n    }\n    if (options?.coallesedSavingDelay) {\n      this.coallesedSavingDelay = options.coallesedSavingDelay\n    }\n    if (options?.acceptsThemes) {\n      this.component.acceptsThemes = options?.acceptsThemes ?? true\n    }\n    if (onReady) {\n      this.onReadyCallback = onReady\n    }\n    Logger.enabled = options?.debug ?? false\n  }\n\n  public deinit() : void {\n    this.onReadyCallback = undefined\n    this.component = {\n      acceptsThemes: true,\n      activeThemes: []\n    }\n    this.messageQueue = []\n    this.sentMessages = []\n    this.lastStreamedItem = undefined\n    this.pendingSaveItems = undefined\n    this.pendingSaveTimeout = undefined\n    this.pendingSaveParams = undefined\n\n    if (this.messageHandler) {\n      this.contentWindow.document.removeEventListener('message', this.messageHandler)\n      this.contentWindow.removeEventListener('message', this.messageHandler)\n    }\n  }\n\n  private registerMessageHandler() {\n    this.messageHandler = (event: MessageEvent) => {\n      Logger.info('Components API Message received:', event.data)\n\n      /**\n       * We don't have access to window.parent.origin due to cross-domain restrictions.\n       * Check referrer if available, otherwise defer to checking for first-run value.\n       * Craft URL objects so that example.com === example.com/\n       */\n      if (document.referrer) {\n        const referrer = new URL(document.referrer).origin\n        const eventOrigin = new URL(event.origin).origin\n\n        if (referrer !== eventOrigin) {\n          return\n        }\n      }\n\n      /**\n       * The first message will be the most reliable one, so we won't change it after any subsequent events,\n       * in case you receive an event from another window.\n       */\n      if (!this.component.origin) {\n        this.component.origin = event.origin\n      } else if (event.origin !== this.component.origin) {\n        // If event origin doesn't match first-run value, return.\n        return\n      }\n\n      // Mobile environment sends data as JSON string.\n      const { data } = event\n      const parsedData = isValidJsonString(data) ? JSON.parse(data) : data\n\n      if (!parsedData) {\n        Logger.error('Invalid data received. Skipping...')\n        return\n      }\n\n      this.handleMessage(parsedData)\n    }\n\n    /**\n     * Mobile (React Native) uses `document`, web/desktop uses `window`.addEventListener\n     * for postMessage API to work properly.\n     * Update May 2019:\n     * As part of transitioning React Native webview into the community package,\n     * we'll now only need to use window.addEventListener.\n     * However, we want to maintain backward compatibility for Mobile < v3.0.5, so we'll keep document.addEventListener\n     * Also, even with the new version of react-native-webview, Android may still require document.addEventListener (while iOS still only requires window.addEventListener)\n     * https://github.com/react-native-community/react-native-webview/issues/323#issuecomment-467767933\n     */\n    this.contentWindow.document.addEventListener('message', this.messageHandler, false)\n    this.contentWindow.addEventListener('message', this.messageHandler, false)\n\n    Logger.info('Waiting for messages...')\n  }\n\n  private handleMessage(payload: MessagePayload) {\n    switch (payload.action) {\n      case ComponentAction.ComponentRegistered:\n        this.component.sessionKey = payload.sessionKey\n        if (payload.componentData) {\n          this.component.data = payload.componentData\n        }\n        this.onReady(payload.data)\n        Logger.info('Component successfully registered with payload:', payload)\n        break\n\n      case ComponentAction.ActivateThemes:\n        this.activateThemes(payload.data.themes)\n        break\n\n      default: {\n        if (!payload.original) {\n          return\n        }\n\n        // Get the callback from queue.\n        const originalMessage = this.sentMessages?.filter((message: MessagePayload) => {\n          return message.messageId === payload.original?.messageId\n        })[0]\n\n        if (!originalMessage) {\n          // Connection must have been reset. We should alert the user unless it's a reply,\n          // in which case we may have been deallocated and reinitialized and lost the\n          // original message\n          const extensionName = this.contentWindow.document.title\n          const alertMessage = (`The extension '${extensionName}' is attempting to communicate with Standard Notes, ` +\n            'but an error is preventing it from doing so. Please restart this extension and try again.').replace('  ', ' ')\n\n          Logger.info(alertMessage)\n          return\n        }\n\n        originalMessage?.callback?.(payload.data)\n        break\n      }\n    }\n  }\n\n  private onReady(data: MessageData) {\n    this.component.environment = data.environment\n    this.component.platform = data.platform\n    this.component.uuid = data.uuid\n\n    if (this.initialPermissions && this.initialPermissions.length > 0) {\n      this.requestPermissions(this.initialPermissions)\n    }\n\n    for (const message of this.messageQueue) {\n      this.postMessage(message.action, message.data, message.callback)\n    }\n\n    this.messageQueue = []\n\n    Logger.info('Data passed to onReady:', data)\n\n    this.activateThemes(data.activeThemeUrls || [])\n\n    // After activateThemes is done, we want to send a message with the ThemesActivated action.\n    this.postMessage(ComponentAction.ThemesActivated, {})\n\n    if (this.onReadyCallback) {\n      this.onReadyCallback()\n    }\n  }\n\n  /**\n   * Gets the component UUID.\n   */\n  public getSelfComponentUUID() : string | undefined {\n    return this.component.uuid\n  }\n\n  /**\n   * Checks if the component is running in a Desktop application.\n   */\n  public isRunningInDesktopApplication() : boolean {\n    return this.component.environment === environmentToString(Environment.Desktop)\n  }\n\n  /**\n   * Checks if the component is running in a Mobile application.\n   */\n  public isRunningInMobileApplication() : boolean {\n    return this.component.environment === environmentToString(Environment.Mobile)\n  }\n\n  /**\n   * Gets the component's data value for the specified key.\n   * @param key The key for the data object.\n   * @returns `undefined` if the value for the key does not exist. Returns the stored value otherwise.\n   */\n  public getComponentDataValueForKey(key: string) : any {\n    if (!this.component.data) {\n      return\n    }\n    return this.component.data[key]\n  }\n\n  /**\n   * Sets the component's data value for the specified key.\n   * @param key The key for the data object.\n   * @param value The value to store under the specified key.\n   */\n  public setComponentDataValueForKey(key: string, value: any) : void {\n    if (!this.component.data) {\n      throw new Error('The component has not been initialized.')\n    }\n    if (!key || (key && key.length === 0)) {\n      throw new Error('The key for the data value should be a valid string.')\n    }\n    this.component.data = {\n      ...this.component.data,\n      [key]: value,\n    }\n    this.postMessage(ComponentAction.SetComponentData, { componentData: this.component.data })\n  }\n\n  /**\n   * Clears the component's data object.\n   */\n  public clearComponentData() : void {\n    this.component.data = {}\n    this.postMessage(ComponentAction.SetComponentData, { componentData: this.component.data })\n  }\n\n  private postMessage(action: ComponentAction, data: MessageData, callback?: (...params: any) => void) {\n    /**\n     * If the sessionKey is not set, we push the message to queue\n     * that will be processed later on.\n     */\n    if (!this.component.sessionKey) {\n      this.messageQueue.push({\n        action,\n        data,\n        api: MessagePayloadApi.Component,\n        callback: callback\n      })\n      return\n    }\n\n    const message = {\n      action,\n      data,\n      messageId: this.generateUUID(),\n      sessionKey: this.component.sessionKey,\n      api: MessagePayloadApi.Component\n    }\n\n    const sentMessage = JSON.parse(JSON.stringify(message))\n    sentMessage.callback = callback\n    this.sentMessages.push(sentMessage)\n\n    let postMessagePayload\n\n    // Mobile (React Native) requires a string for the postMessage API.\n    if (this.isRunningInMobileApplication()) {\n      postMessagePayload = JSON.stringify(message)\n    } else {\n      postMessagePayload = message\n    }\n\n    Logger.info('Posting message:', postMessagePayload)\n    this.contentWindow.parent.postMessage(postMessagePayload, this.component.origin!)\n  }\n\n  private requestPermissions(permissions: ComponentPermission[], callback?: (...params: any) => void) {\n    this.postMessage(ComponentAction.RequestPermissions, { permissions }, () => {\n      callback && callback()\n    })\n  }\n\n  private activateThemes(incomingUrls: string[] = []) {\n    if (!this.component.acceptsThemes) {\n      return\n    }\n\n    Logger.info('Incoming themes:', incomingUrls)\n\n    const { activeThemes } = this.component\n\n    if (activeThemes && activeThemes.sort().toString() == incomingUrls.sort().toString()) {\n      // Incoming theme URLs are same as active, do nothing.\n      return\n    }\n\n    let themesToActivate = incomingUrls\n    const themesToDeactivate = []\n\n    for (const activeUrl of activeThemes) {\n      if (!incomingUrls.includes(activeUrl)) {\n        // Active not present in incoming, deactivate it.\n        themesToDeactivate.push(activeUrl)\n      } else {\n        // Already present in active themes, remove it from themesToActivate.\n        themesToActivate = themesToActivate.filter((candidate) => {\n          return candidate !== activeUrl\n        })\n      }\n    }\n\n    Logger.info('Deactivating themes:', themesToDeactivate)\n    Logger.info('Activating themes:', themesToActivate)\n\n    for (const themeUrl of themesToDeactivate) {\n      this.deactivateTheme(themeUrl)\n    }\n\n    this.component.activeThemes = incomingUrls\n\n    for (const themeUrl of themesToActivate) {\n      if (!themeUrl) {\n        continue\n      }\n\n      const link = this.contentWindow.document.createElement('link')\n      link.id = btoa(themeUrl)\n      link.href = themeUrl\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.media = 'screen,print'\n      link.className = 'custom-theme'\n      this.contentWindow.document.getElementsByTagName('head')[0].appendChild(link)\n    }\n  }\n\n  private themeElementForUrl(themeUrl: string) {\n    const elements = Array.from(this.contentWindow.document.getElementsByClassName('custom-theme')).slice()\n    return elements.find((element) => {\n      // We used to search here by `href`, but on desktop, with local file:// urls, that didn't work for some reason.\n      return element.id == btoa(themeUrl)\n    })\n  }\n\n  private deactivateTheme(themeUrl: string) {\n    const element = this.themeElementForUrl(themeUrl)\n    if (element && element.parentNode) {\n      element.setAttribute('disabled', 'true')\n      element.parentNode.removeChild(element)\n    }\n  }\n\n  private generateUUID() {\n    return generateUuid()\n  }\n\n  /**\n   * Gets the current platform where the component is running.\n   */\n  public get platform() : string | undefined {\n    return this.component.platform\n  }\n\n  /**\n   * Gets the current environment where the component is running.\n   */\n  public get environment() : string | undefined {\n    return this.component.environment\n  }\n\n  /**\n   * Streams a collection of Items, filtered by content type.\n   * New items are passed to the callback as they come.\n   * @param contentTypes A collection of Content Types.\n   * @param callback A callback to process the streamed items.\n   */\n  public streamItems(contentTypes: ContentType[], callback: (data: any) => void) : void {\n    this.postMessage(ComponentAction.StreamItems, { content_types: contentTypes }, (data: any) => {\n      callback(data.items)\n    })\n  }\n\n  /**\n   * Streams the current Item in context.\n   * @param callback A callback to process the streamed item.\n   */\n  public streamContextItem(callback: (data: any) => void) : void {\n    this.postMessage(ComponentAction.StreamContextItem, {}, (data) => {\n      const { item } = data\n      /**\n       * If this is a new context item than the context item the component was currently entertaining,\n       * we want to immediately commit any pending saves, because if you send the new context item to the\n       * component before it has commited its presave, it will end up first replacing the UI with new context item,\n       * and when the debouncer executes to read the component UI, it will be reading the new UI for the previous item.\n       */\n      const isNewItem = !this.lastStreamedItem || this.lastStreamedItem.uuid !== item.uuid\n\n      if (isNewItem && this.pendingSaveTimeout) {\n        clearTimeout(this.pendingSaveTimeout)\n        this._performSavingOfItems(this.pendingSaveParams)\n        this.pendingSaveTimeout = undefined\n        this.pendingSaveParams = undefined\n      }\n\n      this.lastStreamedItem = item\n      callback(this.lastStreamedItem)\n    })\n  }\n\n  /**\n   * Selects a `Tag` item.\n   * @param item The Item (`Tag` or `SmartTag`) to select.\n   */\n  public selectItem(item: ItemPayload) : void {\n    this.postMessage(ComponentAction.SelectItem, { item: this.jsonObjectForItem(item) })\n  }\n\n  /**\n   * Clears current selected `Tag` (if any).\n   */\n  public clearSelection() : void {\n    this.postMessage(ComponentAction.ClearSelection, { content_type: ContentType.Tag })\n  }\n\n  /**\n   * Creates and stores an Item in the item store.\n   * @param item The Item's payload content.\n   * @param callback The callback to process the created Item.\n   */\n  public createItem(item: ItemPayload, callback: (data: any) => void) : void {\n    this.postMessage(ComponentAction.CreateItem, { item: this.jsonObjectForItem(item) }, (data: any) => {\n      let { item } = data\n      /**\n       * A previous version of the SN app had an issue where the item in the reply to ComponentActions.CreateItems\n       * would be nested inside \"items\" and not \"item\". So handle both cases here.\n       */\n      if (!item && data.items && data.items.length > 0) {\n        item = data.items[0]\n      }\n      this.associateItem(item)\n      callback && callback(item)\n    })\n  }\n\n  /**\n   * Creates and stores a collection of Items in the item store.\n   * @param items The Item(s) payload collection.\n   * @param callback The callback to process the created Item(s).\n   */\n  public createItems(items: ItemPayload[], callback: (data: any) => void) : void {\n    const mapped = items.map((item) => this.jsonObjectForItem(item))\n    this.postMessage(ComponentAction.CreateItems, { items: mapped }, (data: any) => {\n      callback && callback(data.items)\n    })\n  }\n\n  /**\n   * Associates a `Tag` with the current Note.\n   * @param item The `Tag` item to associate.\n   */\n  public associateItem(item: ItemPayload) : void {\n    this.postMessage(ComponentAction.AssociateItem, { item: this.jsonObjectForItem(item) })\n  }\n\n  /**\n   * Deassociates a `Tag` with the current Note.\n   * @param item The `Tag` item to deassociate.\n   */\n  public deassociateItem(item: ItemPayload) : void {\n    this.postMessage(ComponentAction.DeassociateItem, { item: this.jsonObjectForItem(item) } )\n  }\n\n  /**\n   * Deletes an Item from the item store.\n   * @param item The Item to delete.\n   * @param callback The callback with the result of the operation.\n   */\n  public deleteItem(item: SNItem, callback: (data: any) => void) : void {\n    this.deleteItems([item], callback)\n  }\n\n  /**\n   * Deletes a collection of Items from the item store.\n   * @param items The Item(s) to delete.\n   * @param callback The callback with the result of the operation.\n   */\n  public deleteItems(items: SNItem[], callback: (data: any) => void) : void {\n    const params = {\n      items: items.map((item: SNItem) => {\n        return this.jsonObjectForItem(item)\n      }),\n    }\n    this.postMessage(ComponentAction.DeleteItems, params, (data) => {\n      callback && callback(data)\n    })\n  }\n\n  /**\n   * Performs a custom action to the component manager.\n   * @param action\n   * @param data\n   * @param callback The callback with the result of the operation.\n   */\n  public sendCustomEvent(action: ComponentAction, data: any, callback?: (data: any) => void) : void {\n    this.postMessage(action, data, (data: any) => {\n      callback && callback(data)\n    })\n  }\n\n  /**\n   * Saves an existing Item in the item store.\n   * @param item An existing Item to be saved.\n   * @param callback\n   * @param skipDebouncer\n   */\n  public saveItem(item: SNItem, callback?: () => void, skipDebouncer = false) : void {\n    this.saveItems([item], callback, skipDebouncer)\n  }\n\n  /**\n   * Runs a callback before saving an Item.\n   * @param item An existing Item to be saved.\n   * @param presave Allows clients to perform any actions last second before the save actually occurs (like setting previews).\n   * Saves debounce by default, so if a client needs to compute a property on an item before saving, it's best to\n   * hook into the debounce cycle so that clients don't have to implement their own debouncing.\n   * @param callback\n   */\n  public saveItemWithPresave(item: SNItem, presave: any, callback?: () => void) : void {\n    this.saveItemsWithPresave([item], presave, callback)\n  }\n\n  /**\n   * Runs a callback before saving a collection of Items.\n   * @param items A collection of existing Items to be saved.\n   * @param presave Allows clients to perform any actions last second before the save actually occurs (like setting previews).\n   * Saves debounce by default, so if a client needs to compute a property on an item before saving, it's best to\n   * hook into the debounce cycle so that clients don't have to implement their own debouncing.\n   * @param callback\n   */\n  public saveItemsWithPresave(items: SNItem[], presave: any, callback?: () => void) : void {\n    this.saveItems(items, callback, false, presave)\n  }\n\n  private _performSavingOfItems({ items, presave, callback }: { items: SNItem[], presave: () => void, callback?: () => void }) {\n    /**\n     * Presave block allows client to gain the benefit of performing something in the debounce cycle.\n     */\n    presave && presave()\n\n    const mappedItems = []\n    for (const item of items) {\n      mappedItems.push(this.jsonObjectForItem(item))\n    }\n\n    this.postMessage(ComponentAction.SaveItems, { items: mappedItems }, () => {\n      callback && callback()\n    })\n  }\n\n  /**\n   * Saves a collection of existing Items.\n   * @param items The items to be saved.\n   * @param callback\n   * @param skipDebouncer Allows saves to go through right away rather than waiting for timeout.\n   * This should be used when saving items via other means besides keystrokes.\n   * @param presave\n   */\n  public saveItems(items: SNItem[], callback?: () => void, skipDebouncer = false, presave?: any) : void {\n    /**\n     * We need to make sure that when we clear a pending save timeout,\n     * we carry over those pending items into the new save.\n     */\n    if (!this.pendingSaveItems) {\n      this.pendingSaveItems = []\n    }\n\n    if (this.coallesedSaving && !skipDebouncer) {\n      if (this.pendingSaveTimeout) {\n        clearTimeout(this.pendingSaveTimeout)\n      }\n\n      const incomingIds = items.map((item: SNItem) => item.uuid)\n      /**\n       * Replace any existing save items with incoming values.\n       * Only keep items here who are not in incomingIds.\n       */\n      const preexistingItems = this.pendingSaveItems.filter((item) => {\n        return !incomingIds.includes(item.uuid)\n      })\n\n      // Add new items, now that we've made sure it's cleared of incoming items.\n      this.pendingSaveItems = preexistingItems.concat(items)\n\n      // We'll potentially need to commit early if stream-context-item message comes in.\n      this.pendingSaveParams = {\n        items: this.pendingSaveItems,\n        presave,\n        callback\n      }\n\n      this.pendingSaveTimeout = setTimeout(() => {\n        this._performSavingOfItems(this.pendingSaveParams)\n        this.pendingSaveItems = []\n        this.pendingSaveTimeout = undefined\n        this.pendingSaveParams = null\n      }, this.coallesedSavingDelay)\n    } else {\n      this._performSavingOfItems({ items, presave, callback })\n    }\n  }\n\n  /**\n   * Sets a new container size for the current component.\n   * @param width The new width.\n   * @param height The new height.\n   */\n  public setSize(width: string | number, height: string | number) : void {\n    this.postMessage(ComponentAction.SetSize, { type: 'container', width, height })\n  }\n\n  private jsonObjectForItem(item: SNItem | ItemPayload) {\n    const copy = Object.assign({}, item) as any\n    copy.children = null\n    copy.parent = null\n    return copy\n  }\n\n  /**\n   * Gets the Item's appData value for the specified key.\n   * Uses the default domain (org.standardnotes.sn).\n   * This function is used with Items returned from streamContextItem() and streamItems()\n   * @param item The Item to get the appData value from.\n   * @param key The key to get the value from.\n   */\n  public getItemAppDataValue(item: ItemMessagePayload, key: AppDataField | string) : any {\n    const defaultDomain = 'org.standardnotes.sn'\n    return item.content.appData[defaultDomain][key]\n  }\n}\n"],"sourceRoot":""}